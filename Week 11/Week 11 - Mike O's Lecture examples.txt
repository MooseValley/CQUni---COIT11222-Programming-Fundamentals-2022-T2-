******************************************************
COIT11222 Programming Fundamentals (2022-T2)
Week: 11
Course WEB Page (Moodle):         https://moodle.cqu.edu.au/course/view.php?id=37697
Course Coordinator:               Dr. Jacqueline Jarvis, Brisbane Campus, Contact: +61-07-3023-4238, Email: j.jarvis@cqu.edu.au
Rocky Teacher (Part-Time):        Mike O'Malley, m.omalley@cqu.edu.au
Mike O's GitHub for course/term:  https://github.com/MooseValley/Uni-COIT11222-Programming-Fundamentals-2022-T2
Mike O'Malley's Java Videos (incl JavaFX, etc):            http://tinyurl.com/MikesJavaVideos
Mike O'Malley's JavaFX + Netbeans + Scene Builder Videos:  http://tinyurl.com/MikesJavaFXVideos
******************************************************

ROAD MAP:
Week 01 Creating Java Programs; Using Data (Part 1)
Week 02 Using Data (Part 2); Methods
Week 03 Methods
Week 04 Classes and Objects
Week 05 Making decisions (Selection Statements)
Week 06 Looping
Week 07 Arrays
Week 08 Advanced Array Concepts
Week 09	Characters, Strings and the StringBuilder
Week 10	Exceptions
Week 11	Files Input and Output    <--- YOU ARE HERE !
Week 12	Design; Ethics; Review


LAST WEEK: Week 10
* Week 10	Exceptions

THIS WEEK: Week 11
* Week 11	Files Input and Output    <--- YOU ARE HERE !



************************************************
*** Files Input and Output
************************************************

Recap / Summary

Many ways to read / write files in Java
    Formatter - nice and easy
    Scanner - nextInt, nextLine, etc
    BufferedReasder / Writer
    Input/Output Streams

Recommend you find 1 way to read files and 1 way to write files that you like best and use those.
Writing: I recommend Formatter
Reading: I recommend Scanner
(Just like this week's tutorial questions use !!!)


********************
Pseudo code:
********************

Reading a file pseudo code:
    Open a File for Input
    While there is still data in the file
        read the file
        create objects, add to array / ArrayList
    Close file

Writing a File pseudo code:
    Open a File for Output (create)
    While there is more data to write (from your array or arraylist ...)
        write data to file
    Close File


********************
Exception Handling
********************

You must use Exception Handling (try, catch, throw, throws, ....)
Your code will NOT compile without it !!
-> File I/O raises Checked Exceptions


*************************
*** try (with resources)
*************************

Old Way - before Try with Resources

try 
{
    Open a File for Output (create)
    While there is more data to write (from your array or arraylist ...)
        write data to file
    //Close file <---- why NOT here ????
}
catch (....)
{
    :::::
}
finally 
{
    Close File
}

try (Open a File for Output (create) )
{
    While there is more data to write (from your array or arraylist ...)
        write data to file
}
catch (....)
{
    :::::
}

Java takes care of closing files, cleaning up after exceptions, etc.


  EOF.
